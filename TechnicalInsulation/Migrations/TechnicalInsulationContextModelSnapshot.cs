// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalInsulation.Context;

#nullable disable

namespace TechnicalInsulation.Migrations
{
    [DbContext(typeof(TechnicalInsulationContext))]
    partial class TechnicalInsulationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnicalInsulation.Models.EnvironmentalCorrosivityCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("CorrosivityCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "C1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "C2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "C3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "C4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "C5I"
                        },
                        new
                        {
                            Id = 6,
                            Name = "C5M"
                        });
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Scope", b =>
                {
                    b.Property<int>("ScopeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScopeId"));

                    b.Property<int>("DesignAirTemperature")
                        .HasColumnType("int");

                    b.Property<int>("DesignAirVelocity")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnvironmentalCorrosivityCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaxTemperatureOnInsulationJacket")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("ScopeId")
                        .HasName("PK_Scope");

                    b.HasIndex("EnvironmentalCorrosivityCategoryId");

                    b.ToTable("Scope", "mas");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Scope", b =>
                {
                    b.HasOne("TechnicalInsulation.Models.EnvironmentalCorrosivityCategory", "EnvironmentalCorrosivityCategory")
                        .WithMany()
                        .HasForeignKey("EnvironmentalCorrosivityCategoryId")
                        .IsRequired();

                    b.Navigation("EnvironmentalCorrosivityCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
