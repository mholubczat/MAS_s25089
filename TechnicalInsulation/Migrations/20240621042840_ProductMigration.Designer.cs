// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechnicalInsulation.Context;

#nullable disable

namespace TechnicalInsulation.Migrations
{
    [DbContext(typeof(TechnicalInsulationContext))]
    [Migration("20240621042840_ProductMigration")]
    partial class ProductMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Element", b =>
                {
                    b.Property<string>("Drawing")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("ElementType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<decimal>("Length")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ScopeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Drawing", "Number")
                        .HasName("PK_Element");

                    b.HasIndex("ScopeId");

                    b.ToTable("Element", "mas");

                    b.HasDiscriminator<string>("ElementType").HasValue("Element");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.PipelineType", b =>
                {
                    b.Property<int>("PipelineTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PipelineTypeId")
                        .HasName("PK_PipelineType");

                    b.ToTable("PipelineType", "mas");

                    b.HasData(
                        new
                        {
                            PipelineTypeId = 1,
                            Name = "Pipe"
                        },
                        new
                        {
                            PipelineTypeId = 2,
                            Name = "Valve"
                        },
                        new
                        {
                            PipelineTypeId = 3,
                            Name = "Elbow"
                        },
                        new
                        {
                            PipelineTypeId = 4,
                            Name = "Tee"
                        },
                        new
                        {
                            PipelineTypeId = 5,
                            Name = "Reduction"
                        },
                        new
                        {
                            PipelineTypeId = 6,
                            Name = "Cap"
                        });
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.VesselBottom", b =>
                {
                    b.Property<int>("VesselBottomId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("VesselDrawing")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VesselNumber")
                        .HasColumnType("int");

                    b.HasKey("VesselBottomId")
                        .HasName("PK_VesselBottom");

                    b.HasIndex("VesselDrawing", "VesselNumber");

                    b.ToTable("VesselBottom", "mas");

                    b.HasData(
                        new
                        {
                            VesselBottomId = 1,
                            Name = "Flat"
                        },
                        new
                        {
                            VesselBottomId = 2,
                            Name = "Sphere"
                        },
                        new
                        {
                            VesselBottomId = 3,
                            Name = "Zeppelin"
                        },
                        new
                        {
                            VesselBottomId = 4,
                            Name = "Cone"
                        });
                });

            modelBuilder.Entity("TechnicalInsulation.Models.EnvironmentalCorrosivityCategory", b =>
                {
                    b.Property<int>("EnvironmentalCorrosivityCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("EnvironmentalCorrosivityCategoryId")
                        .HasName("PK_EnvironmentalCorrosivityCategory");

                    b.ToTable("EnvironmentalCorrosivityCategory", "mas");

                    b.HasData(
                        new
                        {
                            EnvironmentalCorrosivityCategoryId = 1,
                            Name = "C1"
                        },
                        new
                        {
                            EnvironmentalCorrosivityCategoryId = 2,
                            Name = "C2"
                        },
                        new
                        {
                            EnvironmentalCorrosivityCategoryId = 3,
                            Name = "C3"
                        },
                        new
                        {
                            EnvironmentalCorrosivityCategoryId = 4,
                            Name = "C4"
                        },
                        new
                        {
                            EnvironmentalCorrosivityCategoryId = 5,
                            Name = "C5I"
                        },
                        new
                        {
                            EnvironmentalCorrosivityCategoryId = 6,
                            Name = "C5M"
                        });
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Drawing")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId")
                        .HasName("PK_Element");

                    b.HasIndex("Drawing", "Number")
                        .IsUnique();

                    b.ToTable("Product", "mas");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Scope", b =>
                {
                    b.Property<int>("ScopeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScopeId"));

                    b.Property<int>("DesignAirTemperature")
                        .HasColumnType("int");

                    b.Property<int>("DesignAirVelocity")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnvironmentalCorrosivityCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaxTemperatureOnInsulationJacket")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("ScopeId")
                        .HasName("PK_Scope");

                    b.HasIndex("EnvironmentalCorrosivityCategoryId");

                    b.ToTable("Scope", "mas");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Duct", b =>
                {
                    b.HasBaseType("TechnicalInsulation.Models.Elements.Element");

                    b.Property<decimal>("FirstDimension")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SecondDimension")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Duct");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Pipeline", b =>
                {
                    b.HasBaseType("TechnicalInsulation.Models.Elements.Element");

                    b.Property<int?>("Angle")
                        .HasColumnType("int");

                    b.Property<int>("NominalDiameter")
                        .HasColumnType("int");

                    b.Property<int>("PipelineTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SecondaryDiameter")
                        .HasColumnType("int");

                    b.Property<string>("VesselDrawing")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("VesselNumber")
                        .HasColumnType("int");

                    b.HasIndex("PipelineTypeId");

                    b.HasIndex("VesselDrawing", "VesselNumber");

                    b.HasDiscriminator().HasValue("Pipeline");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Vessel", b =>
                {
                    b.HasBaseType("TechnicalInsulation.Models.Elements.Element");

                    b.Property<decimal>("Radius")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Vessel");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Element", b =>
                {
                    b.HasOne("TechnicalInsulation.Models.Scope", "Scope")
                        .WithMany("Elements")
                        .HasForeignKey("ScopeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scope");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.VesselBottom", b =>
                {
                    b.HasOne("TechnicalInsulation.Models.Elements.Vessel", null)
                        .WithMany("VesselBottoms")
                        .HasForeignKey("VesselDrawing", "VesselNumber");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Product", b =>
                {
                    b.HasOne("TechnicalInsulation.Models.Elements.Element", "Element")
                        .WithOne("Product")
                        .HasForeignKey("TechnicalInsulation.Models.Product", "Drawing", "Number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Scope", b =>
                {
                    b.HasOne("TechnicalInsulation.Models.EnvironmentalCorrosivityCategory", "EnvironmentalCorrosivityCategory")
                        .WithMany()
                        .HasForeignKey("EnvironmentalCorrosivityCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnvironmentalCorrosivityCategory");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Pipeline", b =>
                {
                    b.HasOne("TechnicalInsulation.Models.Elements.PipelineType", "PipelineType")
                        .WithMany()
                        .HasForeignKey("PipelineTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechnicalInsulation.Models.Elements.Vessel", null)
                        .WithMany("Pipes")
                        .HasForeignKey("VesselDrawing", "VesselNumber");

                    b.Navigation("PipelineType");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Element", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Scope", b =>
                {
                    b.Navigation("Elements");
                });

            modelBuilder.Entity("TechnicalInsulation.Models.Elements.Vessel", b =>
                {
                    b.Navigation("Pipes");

                    b.Navigation("VesselBottoms");
                });
#pragma warning restore 612, 618
        }
    }
}
